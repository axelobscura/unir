{"version":3,"sources":["Menu.js","Materias/Home.js","Materias/Tema/Tema.js","Materias/ComputacionServidor.js","Materias/GestionSeguridad.js","Materias/SeguridadSoftware.js","Materias/AulaInformacion.js","Materias/ComputacionCliente.js","Materias/Metodologias.js","App.js","serviceWorker.js","index.js"],"names":["Menu","className","to","Home","Tema","props","topicId","useParams","path","substr","ComputacionServidor","useRouteMatch","url","class","exact","GestionSeguridad","SeguridadSoftware","AulaInformacion","ComputacionCliente","Metodologias","App","basename","process","Container","fluid","Row","noGutters","Col","xs","md","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gSA8CeA,G,MA1CF,WACX,OACE,yBAAKC,UAAU,QACb,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,WAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,mCAAT,sCAIF,4BACE,kBAAC,IAAD,CAAMA,GAAG,4BAAT,+BAIF,4BACE,kBAAC,IAAD,CAAMA,GAAG,6BAAT,6BAIF,4BACE,kBAAC,IAAD,CAAMA,GAAG,gCAAT,mCAIF,4BACE,kBAAC,IAAD,CAAMA,GAAG,8BAAT,iCAIF,4BACE,kBAAC,IAAD,CAAMA,GAAG,iBAAT,8ECxBKC,MAXf,WACE,OACE,yBAAKF,UAAU,QACb,oGACA,oCACA,6CACA,+DCOSG,EAZF,SAACC,GAAW,IACjBC,EAAYC,cAAZD,QACEE,EAASH,EAATG,KACR,OACE,6BACE,4BAAKA,EAAKC,OAAO,IACjB,4BAAKH,KCmCII,EAnCa,WAAO,IAAD,EACZC,cAAdH,EAD0B,EAC1BA,KAAMI,EADoB,EACpBA,IACZ,OACE,6BACE,4BAAI,uBAAGC,MAAM,sBAAb,sCACA,wBAAIZ,UAAU,SACZ,4BACE,kBAAC,IAAD,CAAMC,GAAE,UAAKU,EAAL,gBAAR,aAEF,4BACE,kBAAC,IAAD,CAAMV,GAAE,UAAKU,EAAL,gBAAR,aAEF,4BACE,kBAAC,IAAD,CAAMV,GAAE,UAAKU,EAAL,iBAAR,aAEF,4BACE,kBAAC,IAAD,CAAMV,GAAE,UAAKU,EAAL,mBAAR,aAEF,4BACE,kBAAC,IAAD,CAAMV,GAAE,UAAKU,EAAL,kBAAR,cAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACN,KAAMA,GACjB,uDAEF,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,cACT,kBAAC,EAAD,CAAMA,KAAMA,QC3BPO,EARU,WACvB,OACE,6BACE,4DCKSC,EARW,WACxB,OACE,6BACE,0DCKSC,EARS,WACtB,OACE,6BACE,gECKSC,EARY,WACzB,OACE,6BACE,8DCKSC,EARM,WACnB,OACE,6BACE,2F,MC2DSC,MAzCf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAUC,SACpB,6BACE,kBAACC,EAAA,EAAD,CAAWC,OAAO,EAAMvB,UAAU,YAChC,kBAACwB,EAAA,EAAD,CAAKC,WAAW,GACd,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAG5B,UAAU,OAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOa,OAAK,EAACN,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,mCACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,4BACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,6BACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gCACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,8BACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,cCzCEsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACT,kBAAC,IAAD,KACE,kBAAC,EAAD,OACgBC,SAASC,eAAe,SDsHpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6efe842f.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Menu.css';\n\nconst Menu = () => {\n  return (\n    <div className=\"menu\">\n      <ul>\n        <li>\n          <Link to=\"/\">Inicio</Link>\n        </li>\n        <li>\n          <Link to=\"/computacion-en-el-servidor-web\">\n            Computación en el Servidor Web\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/gestion-de-la-seguridad\">\n            Gestión de la Seguridad\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/seguridad-en-el-software\">\n            Seguridad en el Software\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/aula-de-informacion-general\">\n            Aula de Información General\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/computacion-en-el-cliente\">\n            Computación en el Cliente\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/metodologias\">\n            Metodologías, Desarrollo y Calidad en la Ingeniería de Software\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n \nexport default Menu;","import React from 'react';\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <h2>Maestría en Ingeniería del Software y Sistemas Informáticos</h2>\n      <h4>UNIR</h4>\n      <p>Noviembre 2019</p>\n      <h3>Axel Laurent Obscura Sarzotti</h3>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport {useParams} from \"react-router-dom\";\n\nconst Tema = (props) => {\n  let { topicId } = useParams();\n  const { path } = props;\n  return (\n    <div>\n      <h4>{path.substr(1)}</h4>\n      <h3>{topicId}</h3>\n\n    </div>\n  );\n}\n \nexport default Tema;","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Link,\n  useRouteMatch\n} from \"react-router-dom\";\nimport Tema from './Tema/Tema';\n\nconst ComputacionServidor = () => {\n  let { path, url } = useRouteMatch();\n  return (\n    <div>\n      <h2><i class=\"lni-chevron-right\"></i> Computación en el Servidor Web</h2>\n      <ul className=\"temas\">\n        <li>\n          <Link to={`${url}/semana-uno`}>SEMANA 1</Link>\n        </li>\n        <li>\n          <Link to={`${url}/semana-dos`}>SEMANA 2</Link>\n        </li>\n        <li>\n          <Link to={`${url}/semana-tres`}>SEMANA 3</Link>\n        </li>\n        <li>\n          <Link to={`${url}/semana-cuatro`}>SEMANA 4</Link>\n        </li>\n        <li>\n          <Link to={`${url}/semana-cinco`}>SEMANA 5</Link>\n        </li>\n      </ul>\n      \n      <Switch>\n        <Route exact path={path}>\n          <h3>Please select a topic.</h3>\n        </Route>\n        <Route path={`${path}/:topicId`}>\n          <Tema path={path} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n \nexport default ComputacionServidor;","import React from 'react';\n\nconst GestionSeguridad = () => {\n  return (\n    <div>\n      <h2>Gestión de la Seguridad</h2>\n    </div>\n  );\n}\n \nexport default GestionSeguridad;","import React from 'react';\n\nconst SeguridadSoftware = () => {\n  return (\n    <div>\n      <h2>Seguridad en el Software</h2>\n    </div>\n  );\n}\n \nexport default SeguridadSoftware;","import React from 'react';\n\nconst AulaInformacion = () => {\n  return (\n    <div>\n      <h2>Aula de Información General</h2>\n    </div>\n  );\n}\n \nexport default AulaInformacion;","import React from 'react';\n\nconst ComputacionCliente = () => {\n  return (\n    <div>\n      <h2>Computación en el Cliente</h2>\n    </div>\n  );\n}\n \nexport default ComputacionCliente;","import React from 'react';\n\nconst Metodologias = () => {\n  return (\n    <div>\n      <h2>Metodologías, Desarrollo y Calidad en la Ingeniería</h2>\n    </div>\n  );\n}\n \nexport default Metodologias;","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Menu from './Menu';\nimport Home from './Materias/Home';\nimport ComputacionServidor from './Materias/ComputacionServidor';\nimport GestionSeguridad from './Materias/GestionSeguridad';\nimport SeguridadSoftware from './Materias/SeguridadSoftware';\nimport AulaInformacion from './Materias/AulaInformacion';\nimport ComputacionCliente from './Materias/ComputacionCliente';\nimport Metodologias from './Materias/Metodologias';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <div>\n        <Container fluid={true} className=\"p-0 Home\">\n          <Row noGutters={true}>\n            <Col xs={3} md={3}>\n              <Menu />\n            </Col>\n            <Col xs={9} md={9} className=\"p-3\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/computacion-en-el-servidor-web\">\n                  <ComputacionServidor />\n                </Route>\n                <Route path=\"/gestion-de-la-seguridad\">\n                  <GestionSeguridad />\n                </Route>\n                <Route path=\"/seguridad-en-el-software\">\n                  <SeguridadSoftware />\n                </Route>\n                <Route path=\"/aula-de-informacion-general\">\n                  <AulaInformacion />\n                </Route>\n                <Route path=\"/computacion-en-el-cliente\">\n                  <ComputacionCliente />\n                </Route>\n                <Route path=\"/metodologias\">\n                  <Metodologias />\n                </Route>\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter>\n  <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}